<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 
	http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	
	<groupId>org.garfield.java</groupId>
	<artifactId>oltu-auth-server</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>war</packaging>
	
	<name>maven-oltu-auth-server</name>
	<description>Maven Oltu Auth Server</description>
	<inceptionYear>2015</inceptionYear>
	
	<licenses>
		<license>
			<name>MIT License</name>
			<url>http://www.opensource.org/licenses/mit-license.php</url>
			<distribution>repo</distribution>
		</license>
	</licenses>
	
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<log4j2.version>2.4.1</log4j2.version>
		<oltu.version>1.0.1</oltu.version>
	</properties>
	
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.apache.logging.log4j</groupId>
				<artifactId>log4j-bom</artifactId>
				<version>${log4j2.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>
	
	<dependencies>
		<!-- Add Log dependency start -->
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-api</artifactId>
		</dependency>
		
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
		</dependency>
		
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-jcl</artifactId>
		</dependency>
		
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-slf4j-impl</artifactId>
		</dependency>
		
		<!-- support and handle the ClassLoader environment and container lifecycle of a web application, only required at runtime -->
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-web</artifactId>
			<scope>runtime</scope>
		</dependency>
		
		<dependency>
			<groupId>commons-logging</groupId>
			<artifactId>commons-logging</artifactId>
			<version>1.2</version>
		</dependency>
		<!-- Add Log dependency end -->
		
		<!-- Add Oltu dependency start -->
		<dependency>
			<groupId>org.apache.oltu.oauth2</groupId>
			<artifactId>org.apache.oltu.oauth2.authzserver</artifactId>
			<version>${oltu.version}</version>
		</dependency>
		
		<dependency>
			<groupId>org.apache.oltu.oauth2</groupId>
			<artifactId>org.apache.oltu.oauth2.common</artifactId>
			<version>${oltu.version}</version>
        </dependency>
		
		<dependency>
			<groupId>org.apache.oltu.oauth2</groupId>
			<artifactId>org.apache.oltu.oauth2.dynamicreg.server</artifactId>
			<version>${oltu.version}</version>
		</dependency>
		
		<dependency>
			<groupId>org.apache.oltu.oauth2</groupId>
			<artifactId>org.apache.oltu.oauth2.resourceserver</artifactId>
			<version>${oltu.version}</version>
		</dependency>
        
		<dependency>
			<groupId>org.apache.oltu.oauth2</groupId>
			<artifactId>org.apache.oltu.oauth2.jwt</artifactId>
			<version>${oltu.version}</version>
		</dependency>
		<!-- Add Oltu dependency end -->
		
		<!-- Add Apache Common dependency start -->
		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
			<version>1.10</version>
		</dependency>
		
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.4</version>
		</dependency>
		<!-- Add Apache Common dependency start -->
		
		<!-- Servlet API -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.0.1</version>
			<scope>provided</scope>
		</dependency>
		
		<!-- Add dependency for Testing Start -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<scope>test</scope>
		</dependency>
		<!-- Add dependency for Testing END -->
	</dependencies>
	
	<build>
		<finalName>OltuAuthServer</finalName>
		
		<plugins>
			<!-- auto clean -->
			<plugin>
				<artifactId>maven-clean-plugin</artifactId>
				<version>2.6.1</version>
				<executions>
					<execution>
						<id>auto-clean</id>
						<phase>initialize</phase>
						<goals>
							<goal>clean</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
      
			<!-- compile source -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.3</version>
                <configuration>
                    <source>1.7</source>
                    <target>1.7</target>
                    <encoding>${project.build.sourceEncoding}</encoding>
                </configuration>
            </plugin>
            
            <!-- build WAR package -->
            <plugin>
            	<groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.6</version>
                <configuration>
                    <failOnMissingWebXml>false</failOnMissingWebXml>
                    <archive>
                    	<addMavenDescriptor>true</addMavenDescriptor>
                    	<compress>true</compress>
                    	<forced>true</forced>
                    	<index>true</index>
                    	<manifestEntries>
                    		<Built-By>Garfield</Built-By>
                    	</manifestEntries>
                    	<manifest>
                    		<addClasspath>true</addClasspath>
                    		<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                    		<classpathLayoutType>repository</classpathLayoutType>
                    		<classpathMavenRepositoryLayout>true</classpathMavenRepositoryLayout>
                    	</manifest>
                    </archive>
                </configuration>
            </plugin>
            
            <!-- skip the test phase -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.19</version>
				<configuration>
					<skip>true</skip>
					<!--
					<parallel>methods</parallel>
					<threadCount>10</threadCount>
					-->
				</configuration>
			</plugin>
            
			<!-- deploy war to tomcat for local test -->
			<plugin>
				<groupId>org.apache.tomcat.maven</groupId>
				<artifactId>tomcat7-maven-plugin</artifactId>
				<version>2.2</version>
				<configuration>
					<url>http://localhost:8080/manager/text</url>
					<username>admin</username>
					<password>admin</password>
					<path>/${project.build.finalName}</path>
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>
